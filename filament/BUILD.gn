# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

config("filament_config") {
  include_dirs = [ "include" ]
}

config("filament_config_private") {
  cflags = [
    "-Wno-thread-safety-analysis",
    "-Wno-unused-private-field",
  ]
}

source_set("filament") {
  public_configs = [ ":filament_config" ]

  configs += [ ":filament_config_private" ]

  include_dirs = [ "src" ]

  sources = [
    # Public headers.
    "include/filament/Box.h",
    "include/filament/Camera.h",
    "include/filament/Color.h",
    "include/filament/DebugRegistry.h",
    "include/filament/Engine.h",
    "include/filament/Exposure.h",
    "include/filament/Fence.h",
    "include/filament/FilamentAPI.h",
    "include/filament/Frustum.h",
    "include/filament/IndexBuffer.h",
    "include/filament/IndirectLight.h",
    "include/filament/LightManager.h",
    "include/filament/Material.h",
    "include/filament/MaterialInstance.h",
    "include/filament/RenderableManager.h",
    "include/filament/Renderer.h",
    "include/filament/Scene.h",
    "include/filament/Skybox.h",
    "include/filament/Stream.h",
    "include/filament/SwapChain.h",
    "include/filament/Texture.h",
    "include/filament/TextureSampler.h",
    "include/filament/TransformManager.h",
    "include/filament/VertexBuffer.h",
    "include/filament/View.h",
    "include/filament/Viewport.h",
    "include/filament/driver/BufferDescriptor.h",
    "include/filament/driver/ExternalContext.h",
    "include/filament/driver/PixelBufferDescriptor.h",

    # Sources.
    "src/Box.cpp",
    "src/Camera.cpp",
    "src/Color.cpp",
    "src/Culler.cpp",
    "src/DFG.cpp",
    "src/DebugRegistry.cpp",
    "src/Engine.cpp",
    "src/Exposure.cpp",
    "src/Fence.cpp",
    "src/FrameInfo.cpp",
    "src/FrameSkipper.cpp",
    "src/Froxelizer.cpp",
    "src/Frustum.cpp",
    "src/GpuLightBuffer.cpp",
    "src/IndexBuffer.cpp",
    "src/IndirectLight.cpp",
    "src/Material.cpp",
    "src/MaterialInstance.cpp",
    "src/PostProcessManager.cpp",
    "src/PrecompiledMaterials.cpp",
    "src/RenderPass.cpp",
    "src/RenderPrimitive.cpp",
    "src/RenderTargetPool.cpp",
    "src/Renderer.cpp",
    "src/Scene.cpp",
    "src/ShadowMap.cpp",
    "src/Skybox.cpp",
    "src/Stream.cpp",
    "src/SwapChain.cpp",
    "src/Texture.cpp",
    "src/VertexBuffer.cpp",
    "src/View.cpp",
    "src/Viewport.cpp",
    "src/components/CameraManager.cpp",
    "src/components/LightManager.cpp",
    "src/components/RenderableManager.cpp",
    "src/components/TransformManager.cpp",
    "src/driver/CircularBuffer.cpp",
    "src/driver/CommandBufferQueue.cpp",
    "src/driver/CommandStream.cpp",
    "src/driver/Driver.cpp",
    "src/driver/DriverAPI.inc",
    "src/driver/ExternalContext.cpp",
    "src/driver/GPUBuffer.cpp",
    "src/driver/Handle.cpp",
    "src/driver/Program.cpp",
    "src/driver/SamplerBuffer.cpp",
    "src/driver/UniformBuffer.cpp",

    # "src/driver/opengl/GLUtils.cpp",
    # "src/driver/opengl/OpenGLBlitter.cpp",
    # "src/driver/opengl/OpenGLDriver.cpp",
    # "src/driver/opengl/OpenGLProgram.cpp",
    # "src/driver/opengl/gl_headers.cpp",

    # Private headers.
    "src/FilamentAPI-impl.h",
    "src/FrameInfo.h",
    "src/Intersections.h",
    "src/PostProcessManager.h",
    "src/PrecompiledMaterials.h",
    "src/RenderPass.h",
    "src/RenderTargetPool.h",
    "src/components/CameraManager.h",
    "src/components/LightManager.h",
    "src/components/RenderableManager.h",
    "src/components/TransformManager.h",
    "src/details/Allocators.h",
    "src/details/Camera.h",
    "src/details/Culler.h",
    "src/details/DFG.h",
    "src/details/DebugRegistry.h",
    "src/details/Engine.h",
    "src/details/Fence.h",
    "src/details/FrameSkipper.h",
    "src/details/Froxelizer.h",
    "src/details/GpuLightBuffer.h",
    "src/details/IndexBuffer.h",
    "src/details/IndirectLight.h",
    "src/details/Material.h",
    "src/details/MaterialInstance.h",
    "src/details/RenderPrimitive.h",
    "src/details/Renderer.h",
    "src/details/ResourceList.h",
    "src/details/Scene.h",
    "src/details/ShadowMap.h",
    "src/details/Skybox.h",
    "src/details/Stream.h",
    "src/details/SwapChain.h",
    "src/details/Texture.h",
    "src/details/VertexBuffer.h",
    "src/details/View.h",
    "src/driver/CircularBuffer.h",
    "src/driver/CommandBufferQueue.h",
    "src/driver/CommandStream.h",
    "src/driver/Driver.h",
    "src/driver/DriverAPI.inc",
    "src/driver/DriverApi.h",
    "src/driver/DriverApiForward.h",
    "src/driver/DriverBase.h",
    "src/driver/GPUBuffer.h",
    "src/driver/Handle.h",
    "src/driver/Program.h",
    "src/driver/SamplerBuffer.h",
    "src/driver/UniformBuffer.h",
    "src/upcast.h",

    # Vulkan sources.
    "src/driver/vulkan/VulkanBinder.cpp",
    "src/driver/vulkan/VulkanBuffer.cpp",
    "src/driver/vulkan/VulkanDriver.cpp",
    "src/driver/vulkan/VulkanDriverImpl.cpp",
    "src/driver/vulkan/VulkanFboCache.cpp",
    "src/driver/vulkan/VulkanHandles.cpp",
    "src/driver/vulkan/VulkanSamplerCache.cpp",
    "src/driver/vulkan/VulkanStagePool.cpp",
  ]

  deps = [
    "../libs/bluevk",
    "../libs/filabridge",
    "../libs/filaflat",
    "../libs/image:image_headers",
    "../libs/math",
    "../libs/utils",
    "../third_party/robin-map:tsl",
    "../third_party/vkmemalloc",
  ]
}
